var mongoose = require('mongoose'); 
var schemas = require('config/models');    
var Game = schemas.Game;
var Player = schemas.Player;
var async = require('async');
//name,number,lat,lon,total,free,bike,date,bonus,callback

exports.updateGame = function(objToDB) {
	var id = objToDB._id;
	//delete objToDB._id;
	Game.findOne({_id:id},function(err,oldGame){
		if(id == null || oldGame == null){
			console.log("Game does not exists");
			if(objToDB.player1 == null){
				objToDB.player1 = "";
			}if(objToDB.player2 == null){
				objToDB.player2 = "";
			}
			var newGame = new Game({
				number 		: 	objToDB.name,
				player1 	: 	objToDB.player1,
				player2 	: 	objToDB.player2,
				sPlayer1 	: 	objToDB.sPlayer1,
				sPlayer2 	: 	objToDB.sPlayer2,
				date 		: 	objToDB.date,
				type 		: 	objToDB.type
			});
			newGame.save(function (err){
				console.log('Error: '+err);
			});	
		}else{
			var con = {_id : oldGame._id};
			Game.update(con,objToDB,function(err,ob){});
		}
	});
}

exports.getAll = function(callback,res) {  
	Game.find({},function(err,games){
		callback(res,games);
	});
}
exports.getByName = function(name,callback,res){
	Game.find({$or:[ {'player1': name},{'player2': name}]},function(err,games){
		callback(res,games);
	});
}
exports.getByDuel = function(name1,name2,callback,res){
	Game.find({
		$or:[ 
			{$and:[{'player1': name1},{'player2': name2}]},
			{$and:[{'player1': name2},{'player2': name1}]}
		]},
		function(err,games){
		callback(res,games);
	});
}

exports.getByType = function(type,callback,res){
	Game.find({'type' : type},
		function(err,games){
		callback(res,games);
	});
}
exports.removeById = function(id){
	Game.remove({'_id' : id},
		function(err,game){
		if(err){
			console.log("Error: "+err);
		}
	});
}
exports.getGamesInfos = function(callback,res){
	Game.find({},function(err,games){
		getInfoFromGames(callback,games,res);
	});
}
exports.getInfosByName = function(name,callback,res){
	Game.find({$or:[ {'player1': name},{'player2': name}]},function(err,games){
		getInfoFromGames1N(callback,games,name,res);
	});
}
exports.getGamesInfosByDuel = function(name1,name2,callback,res){
	Game.find({
		$or:[ 
			{$and:[{'player1': name1},{'player2': name2}]},
			{$and:[{'player1': name2},{'player2': name1}]}
		]},
		function(err,games){
			getInfoFromGames1N(callback,games,name1,res);
	});
}
exports.getUninit = function(callback,res){
	Game.find({$or:[ 
			{'player1': ""},
			{'player2': ""}
		]},function(err,games){
			callback(res,games);
		})
}

exports.getRanking = function(callback,res){
	async.parallel([
   	 	function(callback) {

        	Game.find({$and:[
        		{'player1': {$ne: ""}},
        		{'player2': {$ne:""}}
        		]},function(err,games){
        		callback(null,games);
       	 	});
    	},
    	function(callback) {
        	Player.find({},function(err,players){
        		callback(null,players);
       	 	});
    	}
	],
// optional callback
	function(err, results) {
		callback(res,results);
    // the results array will equal ['one','two'] even though
    // the second function had a shorter timeout.
	});
}
function calculRankingWPlayers(players,res){
	var games;
	function setGames(vari,games){
		vari = games;
	}
	Game.getAll()
}
function getInfoFromGames(callback,games,res){
	var gamesInfos = {"6GP":0,"6PS":0,"11GP":0,"11PS":0,"0PS":0,"0GP":0,"21GP":0,"21PS":0};
	var i ;
	for(i=0;i<games.length;i++){
		gamesInfos["0PS"] += games[i].sPlayer2+games[i].sPlayer1;
		gamesInfos["0GP"] += 1;
		if(games[i].type == 6){
			gamesInfos["6GP"] += 1;
			gamesInfos["6PS"] += games[i].sPlayer2+games[i].sPlayer1;
		}else if(games[i].type === 11){
			gamesInfos["11GP"] += 1;
			gamesInfos["11PS"] += games[i].sPlayer2+games[i].sPlayer1;
		}else if(games[i].type === 21){
			gamesInfos["21PS"] += games[i].sPlayer2+games[i].sPlayer1;
			gamesInfos["21GP"] += 1;
		}
	}
	callback(res,gamesInfos);
}
function getInfoFromGames1N(callback,games,name,res){
	var gamesInfos = {
		"6GP":0,"6PS":0,"6PL":0,"6GW":0,"6GL":0,
		"11GP":0,"11PS":0,"11PL":0,"11GW":0,"11GL":0,
		"21GP":0,"21PS":0,"21PL":0,"21GW":0,"21GL":0,
		"0GP":0,"0PS":0,"0PL":0,"0GW":0,"0GL":0
	};
	var you, pointsScored,pointsLost;

	for(i=0;i<games.length;i++){
		if(games[i].player1 == name){
			pointsScored = games[i].sPlayer1;
			pointsLost = games[i].sPlayer2;
		}else{
			pointsScored = games[i].sPlayer2;
			pointsLost = games[i].sPlayer1;
		}
		gamesInfos["0PS"] += pointsScored;
		gamesInfos["0GP"] += 1;
		gamesInfos["0PL"] += pointsLost;
		if(games[i].type === 6){
			gamesInfos["6GP"] += 1;
			gamesInfos["6PS"] += pointsScored;
			gamesInfos["6PL"] += pointsLost;
		}else if(games[i].type === 11){
			gamesInfos["11GP"] += 1;
			gamesInfos["11PS"] += pointsScored;
			gamesInfos["11PL"] += pointsLost;
		}else if(games[i].type === 21){
			gamesInfos["21PS"] += pointsScored;
			gamesInfos["21PL"] += pointsLost;
			gamesInfos["21GP"] += 1;
		}
		if(pointsScored>pointsLost){
			gamesInfos["0GW"] += 1;
			if(games[i].type === 6){
				gamesInfos["6GW"] += 1;
			}else if(games[i].type === 11){
				gamesInfos["11GW"] += 1;
			}else if(games[i].type === 21){
				gamesInfos["21GW"] += 1;	
			}
		}else if(pointsScored< pointsLost){
			gamesInfos["0GL"] += 1;
			if(games[i].type === 6){
				gamesInfos["6GL"] += 1;
			}else if(games[i].type === 11){
				gamesInfos["11GL"] += 1;
			}else if(games[i].type === 21){
				gamesInfos["21GL"] += 1;	
			}
		}
	}
	callback(res,gamesInfos);
}
